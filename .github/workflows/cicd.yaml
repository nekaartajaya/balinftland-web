name: CI/CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  test:
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      fail-fast: false
      matrix:
        command:
          - 'build'
          - 'lint:check'
          - 'format:check'
    runs-on: ubuntu-20.04
    name: Test on Node.js 16 ( ${{ matrix.command }} )
    steps:
      - name: Checkout Repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          fetch-depth: 0
      - name: Set Up Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: 16
          cache: yarn
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Run ${{ matrix.command }}
        run: yarn ${{ matrix.command }}

  release-please:
    if: ${{ github.event_name == 'push' && github.ref_type == 'branch' }}
    runs-on: ubuntu-20.04
    name: Release Please
    steps:
      - name: Checkout Repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          fetch-depth: 0
      - name: Release
        id: release
        uses: google-github-actions/release-please-action@af1990728f970ad54c88e130c02a1521988127a2
        with:
          token: ${{ secrets.PAT }}
          fork: true
          release-type: node
          package-name: ${{ github.event.repository.name }}
          include-v-in-tag: false
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}

  deploy:
    needs:
      - release-please
    permissions:
      contents: read
      id-token: write
    strategy:
      max-parallel: 1
      matrix:
        is_release:
          - ${{ needs.release-please.outputs.release_created || false }}
        environment:
          - testnet
          - mainnet
        exclude:
          - is_release: false
            environment: mainnet
    environment: ${{ matrix.environment }}
    env:
      NEXT_PUBLIC_AUTH_URL: '${{ secrets.NEXT_PUBLIC_AUTH_URL }}'
      NEXT_PUBLIC_API_URL: '${{ secrets.NEXT_PUBLIC_API_URL }}'
      NEXT_PUBLIC_WEB3_PROVIDER_URL: '${{ secrets.NEXT_PUBLIC_WEB3_PROVIDER_URL }}'
      NEXT_PUBLIC_WEB3_PROVIDER_KEY: '${{ secrets.NEXT_PUBLIC_WEB3_PROVIDER_KEY }}'
      NEXT_PUBLIC_LBSF_CONTRACT_ADDRESS: '${{ secrets.NEXT_PUBLIC_LBSF_CONTRACT_ADDRESS }}'
      NEXT_PUBLIC_USDC_CONTRACT_ADDRESS: '${{ secrets.NEXT_PUBLIC_USDC_CONTRACT_ADDRESS }}'
    runs-on: ubuntu-20.04
    name: Deploy to ${{ matrix.environment }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          fetch-depth: 0
      - name: Set Up Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: 16
          cache: yarn
      - name: Install Dependencies
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Enable Firebase Experiments
        run: npm install -g firebase-tools && firebase experiments:enable webframeworks
      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@4d0d0023f1d92b9b7d16dda64b3d7abd2c98974b
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          projectId: ${{ matrix.environment }}
          channelId: live
